{smcl}
{txt}{sf}{ul off}
{res}  ___  ____  ____  ____  ____ {res:(R)}
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   14.0{txt}   Copyright 1985-2015 StataCorp LP
  {res:Statistics/Data Analysis}            StataCorp
                                      4905 Lakeway Drive
     {res:{it:MP - Parallel Edition}}            College Station, Texas 77845 USA
                                      800-STATA-PC        {browse "http://www.stata.com"}
                                      979-696-4600        {browse "mailto:stata@stata.com":stata@stata.com}
                                      979-696-4601 (fax)

Single-user 8-core Stata perpetual license:
       Serial number:  10699393
         Licensed to:  More resources visit my shop
                       shop64663697.taobao.com

Notes:
      1.  Stata is running in batch mode.
{com}{p 6 10 2}
2.
Unicode is supported; see {help unicode_advice:help unicode_advice}.
{p_end}
{p 6 10 2}
3.
More than 2 billion observations are allowed;
see {help obs_advice:help obs_advice}.
{p_end}
{p 6 10 2}
4.
Maximum number of variables is set to
5000;
see {help set_maxvar:help set_maxvar}.
{p_end}

. do audit.do 
{txt}
{com}. /* # loads ../output/dataset.do
> # produces some check graphics
> # like number of listings per date
> # summary statics on price
> # ...
> 
> # overall goal: data quality
> 
> 
> # --> produce plots in ../audit
> # produce log txt files with important statistics in ../audit/whatever.txt */
. 
. cap ssc install distinct
{txt}
{com}. cap ssc install estout
{txt}
{com}. clear all
{txt}
{com}. cap log close
{txt}
{com}. 
. log using "../audit/log/on_run", text replace
{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/Users/hulai/Github/tisem-airbnb/preclean/code/../audit/log/on_run.log
  {txt}log type:  {res}text
 {txt}opened on:  {res} 4 Dec 2019, 04:34:17
{txt}
{com}. 
. use "../temp/listings.dta", clear
{txt}
{com}. 
. estpost tabstat price age host_response_rate host_acceptance_rate host_is_superhost host_identity_verified accommodates review_scores_rating reviews_per_month, ///
>                 stat(count mean sd min p50 max) c(s)

{txt}Summary statistics: count mean sd min p50 max
     for variables: price age host_response_rate host_acceptance_rate host_is_superhost host_identity_verified accommodates review_scores_rating reviews_per_month

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:e(count)}{space 1}{space 1}{ralign 9:e(mean)}{space 1}{space 1}{ralign 9:e(sd)}{space 1}{space 1}{ralign 9:e(min)}{space 1}{space 1}{ralign 9:e(p50)}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:price}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     3573}}}{space 1}{space 1}{ralign 9:{res:{sf: 169.0728}}}{space 1}{space 1}{ralign 9:{res:{sf:  111.677}}}{space 1}{space 1}{ralign 9:{res:{sf:       10}}}{space 1}{space 1}{ralign 9:{res:{sf:      150}}}{space 1}
{space 0}{space 0}{ralign 12:age}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     3585}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.449468}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.699612}}}{space 1}{space 1}{ralign 9:{res:{sf: .0027379}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.094456}}}{space 1}
{space 0}{space 0}{ralign 12:host_resp~te}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     3114}}}{space 1}{space 1}{ralign 9:{res:{sf: 94.98908}}}{space 1}{space 1}{ralign 9:{res:{sf: 12.51769}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:      100}}}{space 1}
{space 0}{space 0}{ralign 12:host_accep~e}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     3114}}}{space 1}{space 1}{ralign 9:{res:{sf: 84.17309}}}{space 1}{space 1}{ralign 9:{res:{sf: 21.77925}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:       94}}}{space 1}
{space 0}{space 0}{ralign 12:host_is_su~t}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     3585}}}{space 1}{space 1}{ralign 9:{res:{sf: .1135286}}}{space 1}{space 1}{ralign 9:{res:{sf: .3172821}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}
{space 0}{space 0}{ralign 12:host_ident~d}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     3585}}}{space 1}{space 1}{ralign 9:{res:{sf: .7260809}}}{space 1}{space 1}{ralign 9:{res:{sf: .4460302}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}
{space 0}{space 0}{ralign 12:accommodates}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     3585}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.041283}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.778929}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}
{space 0}{space 0}{ralign 12:review_sco~g}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     2772}}}{space 1}{space 1}{ralign 9:{res:{sf: 91.91667}}}{space 1}{space 1}{ralign 9:{res:{sf: 9.531686}}}{space 1}{space 1}{ralign 9:{res:{sf:       20}}}{space 1}{space 1}{ralign 9:{res:{sf:       94}}}{space 1}
{space 0}{space 0}{ralign 12:reviews_pe~h}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     2829}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.970908}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.120561}}}{space 1}{space 1}{ralign 9:{res:{sf:      .01}}}{space 1}{space 1}{ralign 9:{res:{sf:     1.17}}}{space 1}

{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:e(max)}{space 1}
{space 0}{hline 13}{c   +}{hline 11}
{space 0}{space 0}{ralign 12:price}{space 1}{c |}{space 1}{ralign 9:{res:{sf:      999}}}{space 1}
{space 0}{space 0}{ralign 12:age}{space 1}{c |}{space 1}{ralign 9:{res:{sf:  7.82204}}}{space 1}
{space 0}{space 0}{ralign 12:host_resp~te}{space 1}{c |}{space 1}{ralign 9:{res:{sf:      100}}}{space 1}
{space 0}{space 0}{ralign 12:host_accep~e}{space 1}{c |}{space 1}{ralign 9:{res:{sf:      100}}}{space 1}
{space 0}{space 0}{ralign 12:host_is_su~t}{space 1}{c |}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}
{space 0}{space 0}{ralign 12:host_ident~d}{space 1}{c |}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}
{space 0}{space 0}{ralign 12:accommodates}{space 1}{c |}{space 1}{ralign 9:{res:{sf:       16}}}{space 1}
{space 0}{space 0}{ralign 12:review_sco~g}{space 1}{c |}{space 1}{ralign 9:{res:{sf:      100}}}{space 1}
{space 0}{space 0}{ralign 12:reviews_pe~h}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    19.15}}}{space 1}

{com}. esttab . using "../audit/table/sum_listings.txt", cells("count mean(fmt(a3)) sd(fmt(a3)) min p50 max") replace
{res}{txt}(output written to {browse  `"../audit/table/sum_listings.txt"'})

{com}.                 
. foreach i of varlist price review_scores_rating reviews_per_month {c -(}
{txt}  2{com}. hist `i'
{txt}  3{com}. graph export "../audit/figure/`i'.pdf", replace
{txt}  4{com}. {c )-}
{txt}(bin={res}35{txt}, start={res}10{txt}, width={res}28.257143{txt})
{res}{txt}(file ../audit/figure/price.pdf written in PDF format)
(bin={res}34{txt}, start={res}20{txt}, width={res}2.3529412{txt})
{res}{txt}(file ../audit/figure/review_scores_rating.pdf written in PDF format)
(bin={res}34{txt}, start={res}.01{txt}, width={res}.56294118{txt})
{res}{txt}(file ../audit/figure/reviews_per_month.pdf written in PDF format)

{com}. 
. scatter price accommodates || lfit price accommodates
{res}{txt}
{com}. graph export "../audit/figure/pri_accom.pdf", replace
{txt}(file ../audit/figure/pri_accom.pdf written in PDF format)

{com}. scatter price review_scores_rating || lfit price review_scores_rating
{res}{txt}
{com}. graph export "../audit/figure/pri_rating.pdf", replace
{txt}(file ../audit/figure/pri_rating.pdf written in PDF format)

{com}. scatter review_scores_rating reviews_per_month || lfit review_scores_rating reviews_per_month
{res}{txt}
{com}. graph export "../audit/figure/rating_review.pdf", replace
{txt}(file ../audit/figure/rating_review.pdf written in PDF format)

{com}. 
. 
. use "../temp/calendar", clear
{txt}
{com}. collapse (sum) available (count) listing_id, by(date)
{txt}
{com}. export delim using "../audit/table/sum_cal.txt", delim(tab) replace
{res}{txt}file ../audit/table/sum_cal.txt saved

{com}. 
. gen avail_r = available/listing_id
{txt}
{com}. 
. tsset date
{res}{txt}{col 9}time variable:  {res}{col 25}date, 06sep2016 to 05sep2017
{txt}{col 17}delta:  {res}1 day
{txt}
{com}. tsline avail_r
{res}{txt}
{com}. graph export "../audit/figure/available.pdf", replace
{txt}(file ../audit/figure/available.pdf written in PDF format)

{com}. 
. 
{txt}end of do-file
